/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    locales {
        compatible = "zmk,locales";
        active-locale = "es";
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | BSPC |
// | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ñ  |  ´   |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  ?  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE | ALT |
            bindings = <
                &kp TAB   &kp Q &kp W &kp E &kp R &kp T    &kp Y &kp U  &kp I     &kp O   &kp P      &kp BSPC
                &kp LSHFT &kp A &kp S &kp D &kp F &kp G    &kp H &kp J  &kp K     &kp L   &kp SEMI   &kp SQT
                &kp LCTRL &kp Z &kp X &kp C &kp V &kp B    &kp N &kp M  &kp COMMA &kp DOT &kp UNDER  &kp ESC
                &kp LGUI &mo 1 &kp SPACE       &kp RET &mo 2 &kp RALT
            >;
        };

        lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |  ;  |  :  |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
            bindings = <
                &kp TAB       &kp N1           &kp N2           &kp N3           &kp N4           &kp N5           &kp N6      &kp N7      &kp N8        &kp N9        &kp N0     &kp BSPC
                &bt BT_CLR    &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &kp LEFT    &kp DOWN    &kp UP        &kp RIGHT     &trans     &trans
                &kp LSHFT     &trans           &trans           &trans           &trans           &trans           &trans      &trans      &kp LS(COMMA) &kp LS(DOT)   &trans     &trans
                                   &kp LGUI     &trans           &kp SPACE        &kp RET          &trans           &kp RALT
            >;
        };

        raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  "  |  #  |  $  |  %  |   |  &  |  /  |  (  |  )  |  =  | BSPC |
// | SHFT |  \  |  @  |  €  |  ~  |  ¿  |   |  +  |  -  |  [  |  ]  | "|" |  '   |
// | CTRL |  <  |  >  |  º  |  ^  |  ¡  |   |  *  |  _  |  {  |  }  | Spr |  `   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
            bindings = <
                &kp TAB       &kp LS(N1)             &kp LS(N2)               &kp RA(N3)       &kp LS(N4)        &kp LS(N5)       &kp LS(N6)      &kp LS(N7)    &kp LS(N8)     &kp LS(N9)          &kp LS(N0)     &kp BSPC
                &kp LSHFT     &kp RA(GRAVE)          &kp RA(N2)               &kp RA(E)        &kp RA(N4)        &kp PLUS         &kp RBKT        &kp FSLH      &kp RA(LBKT)   &kp RA(RBKT)        &kp RA(N1)     &kp MINUS
                &kp LCTRL     &kp NON_US_BACKSLASH   &kp LS(NON_US_BACKSLASH) &kp GRAVE        &kp LS(LBKT)        &kp EQUAL        &kp LS(RBKT)    &kp LS(FSLH)  &kp RA(SQT)    &kp RA(NON_US_HASH) &kp DEL        &kp LBKT
                                    &kp LGUI  &trans            &kp SPACE        &kp RET           &trans           &kp RALT
            >;
        };
    };
};